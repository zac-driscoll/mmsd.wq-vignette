geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
#
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection, filter = TRUE))
tg <- tg %>%
activate(nodes) %>%
filter(!grepl("format|scale|theme|pal|sql|site_time|plot_survey_flow|flow|get_surveys|get_db_table|server|ui|app",name)) %>%
mutate(function_type =
case_when(grepl("server|ui|app",name) ~ "Shiny",
grepl("plot|graph|map|model|calc|flow|find|DT|normality|outliers",name) ~"Data Proccessing",
grepl("get|dbConnection",name) ~ "Query"),
component =
case_when(grepl("replicate|blank|rep|part|pgt",name) ~ "QA/QC App",
grepl("dist|normality",name) ~ "Dist App",
grepl("flow",name) ~"Hydrology",
grepl("plot|model|map|percent|outliers",name) ~ "Data Viz / Analysis",
TRUE ~ "Query")) %>%
activate(edges)
# slice(-c(4,9))
windows()
ggraph(tg) +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = function_type),
alpha = 0.25) +
geom_node_point(size = 30,aes(color = function_type,
group = as.factor(function_type))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))
windows()
ggraph(tg) +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = function_type),
alpha = 0.25) +
geom_node_point(size = 30,aes(color = function_type,
group = as.factor(function_type))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
windows()
ggraph(tg,layout = "auto") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = component),
alpha = 0.33) +
geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
library(foodwebr)
library(tidygraph)
library(ggraph)
library(tidyverse)
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection, filter = TRUE))
tg <- tg %>%
activate(nodes) %>%
filter(!grepl("format|scale|theme|pal|sql|site_time|plot_survey_flow|flow|get_surveys|get_db_table",name)) %>%
mutate(function_type =
case_when(grepl("server|ui|app",name) ~ "Shiny",
grepl("plot|graph|map|model|calc|flow|find|DT|normality|outliers",name) ~"Data Proccessing",
grepl("get|dbConnection",name) ~ "Query"),
component =
case_when(grepl("replicate|blank|rep|part|pgt",name) ~ "QA/QC App",
grepl("dist|normality",name) ~ "Dist App",
grepl("flow",name) ~"Hydrology",
grepl("plot|model|map|percent|outliers",name) ~ "Data Viz / Analysis",
TRUE ~ "Query")) %>%
activate(edges)
# slice(-c(4,9))
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))
# custom_layout <-
#   create_layout(
#     graph = tg,
#     layout = "manual",
#     node.positions = (
#       create_layout(tg, layout = "auto") %>%
#         mutate(x = if_else(name == "map_survey_parameter", 7, x)) %>%
#         select(x, y)
#     )
#   )
windows()
ggraph(tg,layout = "auto") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = component),
alpha = 0.33) +
geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
tg
source('~/R/Rpackages/mmsd.wq/vignettes/documentation.R', echo=TRUE)
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection, filter = TRUE))
tg <- tg %>%
activate(nodes) %>%
filter(!grepl("format|scale|theme|pal|sql|site_time|plot_survey_flow|flow|get_surveys|get_db_table",name)) %>%
mutate(function_type =
case_when(grepl("server|ui|app",name) ~ "Shiny",
grepl("plot|graph|map|model|calc|flow|find|DT|normality|outliers",name) ~"Data Proccessing",
grepl("get|dbConnection",name) ~ "Query"),
component =
case_when(grepl("replicate|blank|rep|part|pgt",name) ~ "QA/QC App",
grepl("dist|normality",name) ~ "Dist App",
grepl("flow",name) ~"Hydrology",
grepl("plot|model|map|percent|outliers",name) ~ "Data Viz / Analysis",
TRUE ~ "Query")) %>%
activate(edges)
# slice(-c(4,9))
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))  %>%
activate(edges) %>%
groub_by(component)
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))  %>%
activate(edges) %>%
group_by(component)
windows()
ggraph(tg,layout = "auto") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = component),
alpha = 0.33) +
geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection,
filter = TRUE,
directed = FALSE))
tg <- tg %>%
activate(nodes) %>%
filter(!grepl("format|scale|theme|pal|sql|site_time|plot_survey_flow|flow|get_surveys|get_db_table",name)) %>%
mutate(function_type =
case_when(grepl("server|ui|app",name) ~ "Shiny",
grepl("plot|graph|map|model|calc|flow|find|DT|normality|outliers",name) ~"Data Proccessing",
grepl("get|dbConnection",name) ~ "Query"),
component =
case_when(grepl("replicate|blank|rep|part|pgt",name) ~ "QA/QC App",
grepl("dist|normality",name) ~ "Dist App",
grepl("flow",name) ~"Hydrology",
grepl("plot|model|map|percent|outliers",name) ~ "Data Viz / Analysis",
TRUE ~ "Query")) %>%
activate(edges)
# slice(-c(4,9))
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))  %>%
activate(edges)
# custom_layout <-
#   create_layout(
#     graph = tg,
#     layout = "manual",
#     node.positions = (
#       create_layout(tg, layout = "auto") %>%
#         mutate(x = if_else(name == "map_survey_parameter", 7, x)) %>%
#         select(x, y)
#     )
#   )
windows()
ggraph(tg,layout = "auto") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = component),
alpha = 0.33) +
geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection,
filter = TRUE,
mode = "in"))
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection,
filter = TRUE),
mode = "in"
)
tg <- tg %>%
activate(nodes) %>%
filter(!grepl("format|scale|theme|pal|sql|site_time|plot_survey_flow|flow|get_surveys|get_db_table",name)) %>%
mutate(function_type =
case_when(grepl("server|ui|app",name) ~ "Shiny",
grepl("plot|graph|map|model|calc|flow|find|DT|normality|outliers",name) ~"Data Proccessing",
grepl("get|dbConnection",name) ~ "Query"),
component =
case_when(grepl("replicate|blank|rep|part|pgt",name) ~ "QA/QC App",
grepl("dist|normality",name) ~ "Dist App",
grepl("flow",name) ~"Hydrology",
grepl("plot|model|map|percent|outliers",name) ~ "Data Viz / Analysis",
TRUE ~ "Query")) %>%
activate(edges)
# slice(-c(4,9))
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))  %>%
activate(edges)
# custom_layout <-
#   create_layout(
#     graph = tg,
#     layout = "manual",
#     node.positions = (
#       create_layout(tg, layout = "auto") %>%
#         mutate(x = if_else(name == "map_survey_parameter", 7, x)) %>%
#         select(x, y)
#     )
#   )
windows()
ggraph(tg,layout = "auto") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = component),
alpha = 0.33) +
geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
tg <- tidygraph::as_tbl_graph(foodweb(mmsd.wq::make_dbConnection,
filter = TRUE),
directed = FALSE
)
tg <- tg %>%
activate(nodes) %>%
filter(!grepl("format|scale|theme|pal|sql|site_time|plot_survey_flow|flow|get_surveys|get_db_table",name)) %>%
mutate(function_type =
case_when(grepl("server|ui|app",name) ~ "Shiny",
grepl("plot|graph|map|model|calc|flow|find|DT|normality|outliers",name) ~"Data Proccessing",
grepl("get|dbConnection",name) ~ "Query"),
component =
case_when(grepl("replicate|blank|rep|part|pgt",name) ~ "QA/QC App",
grepl("dist|normality",name) ~ "Dist App",
grepl("flow",name) ~"Hydrology",
grepl("plot|model|map|percent|outliers",name) ~ "Data Viz / Analysis",
TRUE ~ "Query")) %>%
activate(edges)
# slice(-c(4,9))
tg <-  tg %>%
activate(edges) %>%
left_join(
tg%>%
activate(nodes) %>%
as_tibble() %>%
select(component,function_type) %>%
rownames_to_column("from")%>%
mutate(from = as.integer(from)
))  %>%
activate(edges)
# custom_layout <-
#   create_layout(
#     graph = tg,
#     layout = "manual",
#     node.positions = (
#       create_layout(tg, layout = "auto") %>%
#         mutate(x = if_else(name == "map_survey_parameter", 7, x)) %>%
#         select(x, y)
#     )
#   )
windows()
ggraph(tg,layout = "auto") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
end_cap = circle(3, 'mm'),
aes(color = component),
alpha = 0.33) +
geom_node_point(size = 30,
aes(color = component,
group = as.factor(component))) +
geom_node_text(aes(label = name), size = 2.25, color = "black")
bookdown::gitbook()
bookdown::render_book(self_contained = TRUE)
zz <- mmsd.wq::get_survey_data(survey_num = "SS 423")
library(mmsd.wq)
zz <- mmsd.wq::get_survey_data(survey_num = "SS 423")
View(zz)
map_survey_parameter(survey_num = "OH 634",param_name = "DO",sample_depth = "S")
parameter_names
map_survey_parameter(survey_num = "OH 634",param_name = "Se",sample_depth = "M")
plot_historic_parameter(survey_data = "OH 634",param_name "Se", sample_depth = "M")
plot_historic_parameter(survey_data = "OH 634",param_name = "Se", sample_depth = "M")
plot_historic_parameter(survey_data = "OH 634",param_name = "Se")
View(zz)
zz <- mmsd.wq::get_survey_data(survey_num = "OH 634")
View(zz)
zz <- get_survey_data(start_date = "2010-01-01",end_date = "2021-12-31",
param_name = "Se",site_code = "OH-14M")
View(zz)
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num))
library(ggplot``)
library(ggplot2)
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num))
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num)) +
geom_point(aes(x = collection_date, y = LOQ)) +
geom_point(aes(x = collection_date, y = MDL))
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num)) +
geom_point(aes(x = collection_date, y = loq)) +
geom_point(aes(x = collection_date, y = mdl))
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num)) +
geom_point(aes(x = collection_date, y = loq),color = "blue") +
geom_point(aes(x = collection_date, y = mdl), color = "red")
windows()
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num)) +
geom_point(aes(x = collection_date, y = loq),color = "blue") +
geom_point(aes(x = collection_date, y = mdl), color = "red")
zz <- get_survey_data(start_date = "2010-01-01",end_date = "2021-12-31",
param_name = c("Se","As","Pb"))
windows()
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num)) +
geom_point(aes(x = collection_date, y = loq),color = "blue") +
geom_point(aes(x = collection_date, y = mdl), color = "red")
windows()
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num),
color = parameter)
windows()
zz %>%
ggplot() +
geom_point(aes(x = collection_date, y = reading_num),
color = label_name)
View(zz)
ggplot(data = zz) +
geom_point(aes(x = collection_date, y = reading_num),
color = label_name)
ggplot(data = zz) +
geom_point(aes(x = collection_date, y = reading_num,color = label_name))
windows()
ggplot(data = zz) +
geom_point(aes(x = collection_date, y = reading_num,color = label_name))
parameter_names
plot_survey_xy(param1 = "ALK",param2 = "Sp_cond",survey_num ="NS 223")
plot_survey_xy(param1 = "ALK",param2 = "Cl",survey_num ="NS 223")
plot_survey_xy(param1 = "ALK",param2 = "Mg",survey_num ="NS 223")
map_survey_parameter(param_name = "ALK",survey_num = "NS 223",sample_depth = "S")
library(mmmsd.wq)
library(mmsd.wq)
get_site_time("HC-01")
devtools::load_all()
get_site_time("HC-01")
devtools::load_all()
get_site_time("HC-01")
zz <-  get_survey_data(start_date = "2011-08-10",
end_date = "2011-08-10")
View(zz)
get_site_time("UC-01")
map_wq_sites()
get_site_time("UC-07")
get_site_time("HC-01")
bookdown::render_book()
library(mmsd.wq)
library(tidyverse)
zz <- get_survey_data(start_date = "2020-01-01", end_date = "2021-12-31")
View(zz)
zz <- get_survey_data(start_date = "2020-01-01", end_date = "2021-12-31",
reps = TRUE,
blanks = TRUE)
View(zz)
View(zz)
View(zz)
zz %>%
filter(reading_number < loq
&
grepl("J.",result_flag))
zz %>%
filter(result_number < loq
&
grepl("J.",result_flag))
zz %>%
filter(reading_num < loq
&
grepl("J.",result_flag))
zz %>%
filter(reading_num < loq
&
grepl("J.",result_flag)) $%>%
view()
zz %>%
filter(reading_num < loq
&
grepl("J.",result_flag)) %>%
view()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag)) %>%
view()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag))
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag)) %>%
view()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
view()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(label_name) %>%
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(label_name)
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(label_name) %>%
count()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(survey_num) %>%
count()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(month,year) %>%
count()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(month,year,parameter) %>%
count()
zz %>%
filter(reading_num < loq
&
!grepl("J.",result_flag) &
reading_val != "ND" ) %>%
group_by(survey_num) %>%
count()  %>%
view()
zz %>%
filter(survey_num == "RI 1033") %>%
view()
bookdown::render_book()
library(mmsd.conmon)
